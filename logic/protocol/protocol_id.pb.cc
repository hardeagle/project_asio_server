// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol_id.proto

#include "protocol_id.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace Protocol {
}  // namespace Protocol
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_protocol_5fid_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_protocol_5fid_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protocol_5fid_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_protocol_5fid_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_protocol_5fid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021protocol_id.proto\022\010Protocol*\377\004\n\005MsgId\022"
  "\023\n\017C2S_SYSTEM_BASE\020\000\022\023\n\017C2S_SYSTEM_TICK\020"
  "\001\022\023\n\017S2C_SYSTEM_TICK\020\002\022\022\n\016C2S_SYSTEM_TOP"
  "\020c\022\024\n\020C2S_ACCOUNT_BASE\020d\022\025\n\021C2S_ACCOUNT_"
  "LOGIN\020e\022\025\n\021S2C_ACCOUNT_LOGIN\020f\022\026\n\022C2S_AC"
  "COUNT_CREATE\020g\022\026\n\022S2C_ACCOUNT_CREATE\020h\022\024"
  "\n\020C2S_ACCOUNT_LOAD\020i\022\024\n\020S2C_ACCOUNT_LOAD"
  "\020j\022\032\n\026C2S_ACCOUNT_ASK_OPENID\020k\022\032\n\026S2C_AC"
  "COUNT_ASK_OPENID\020l\022\026\n\022C2S_ACCOUNT_UPDATE"
  "\020m\022\026\n\022S2C_ACCOUNT_UPDATE\020n\022\024\n\017C2S_ACCOUN"
  "T_TOP\020\307\001\022\022\n\rC2S_SHOP_BASE\020\310\001\022\022\n\rC2S_SHOP"
  "_LOAD\020\311\001\022\022\n\rS2C_SHOP_LOAD\020\312\001\022\021\n\014C2S_SHOP"
  "_BUY\020\313\001\022\021\n\014S2C_SHOP_BUY\020\314\001\022\021\n\014C2S_SHOP_T"
  "OP\020\253\002\022\022\n\rC2S_RANK_BASE\020\254\002\022\022\n\rC2S_RANK_LO"
  "AD\020\255\002\022\022\n\rS2C_RANK_LOAD\020\256\002\022\024\n\017C2S_RANK_UP"
  "DATE\020\257\002\022\024\n\017S2C_RANK_UPDATE\020\260\002\022\025\n\020S2C_RAN"
  "K_MARQUEE\020\262\002\022\021\n\014C2S_RANK_TOP\020\217\003b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protocol_5fid_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_protocol_5fid_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protocol_5fid_2eproto_once;
static bool descriptor_table_protocol_5fid_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protocol_5fid_2eproto = {
  &descriptor_table_protocol_5fid_2eproto_initialized, descriptor_table_protodef_protocol_5fid_2eproto, "protocol_id.proto", 679,
  &descriptor_table_protocol_5fid_2eproto_once, descriptor_table_protocol_5fid_2eproto_sccs, descriptor_table_protocol_5fid_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_protocol_5fid_2eproto::offsets,
  file_level_metadata_protocol_5fid_2eproto, 0, file_level_enum_descriptors_protocol_5fid_2eproto, file_level_service_descriptors_protocol_5fid_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protocol_5fid_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_protocol_5fid_2eproto), true);
namespace Protocol {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgId_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protocol_5fid_2eproto);
  return file_level_enum_descriptors_protocol_5fid_2eproto[0];
}
bool MsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 299:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 306:
    case 399:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
